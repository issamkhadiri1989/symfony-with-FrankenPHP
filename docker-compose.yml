version: '3.7'

services:
  database:
    healthcheck:
      test: mysqladmin ping -h 127.0.0.1 -u root --password=$$MYSQL_ROOT_PASSWORD
      interval: 5s
      retries: 5
    image: mysql
    volumes:
      - db_data:/var/lib/mysql
      - ./docker/db/mariadb/my.cnf:/etc/mysql/conf.d/my.cnf
    ports:
      - "3306:3306"
    environment:
      MYSQL_ROOT_PASSWORD: 'superSecr3t'
      MYSQL_USER: 'app_user'
      MYSQL_PASSWORD: 't3rceS'
      MYSQL_DATABASE: 'database'
    networks:
      - inner_net

  myadmin:
    image: phpmyadmin/phpmyadmin:5
    environment:
      PMA_HOST: database
    ports:
      - "8080:80"
    depends_on:
      - database
    networks:
      - inner_net
    volumes:
      - db_admin_data:/var/www/html

  http:
    build:
      context: .
      dockerfile: ./docker/server/Dockerfile
    expose:
      - "9000"
      - "9003"
    ports:
      - "8000:80"
    working_dir: /var/www/html
    volumes:
      - ./source:/var/www/html
      - ./docker/server/apache/sites-enabled:/etc/apache2/sites-enabled
      - ./docker/server/php/php.ini:/usr/local/etc/php/conf.d/extra-php-config.ini
      - ./docker/xdebug/xdebug.ini:/usr/local/etc/php/conf.d/xdebug.ini
    depends_on:
      - database
    networks:
      - inner_net
    environment:
      MERCURE_PUBLISHER_JWT_KEY: "!ChangeThisMercureHubJWTSecretKey!"
      MERCURE_SUBSCRIBER_JWT_KEY: "!ChangeThisMercureHubJWTSecretKey!"
      PUBLISHER_JWT_KEY: "!ChangeThisMercureHubJWTSecretKey!"
      SUBSCRIBER_JWT_KEY: "!ChangeThisMercureHubJWTSecretKey!"

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.17.0
    environment:
      - node.name=elasticsearch
      - cluster.name=docker-cluster
      - bootstrap.memory_lock=true
      - discovery.type=single-node
      - xpack.security.enabled=false
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    networks:
        - inner_net
    volumes:
      - esdata:/usr/share/elasticsearch/data
    ports:
      - 9292:9200

  mongodb:
    image: mongo:6-jammy
    ports:
      - '27017:27017'
    volumes:
      - dbdata6:/data/db
    networks:
      - inner_net

  mongo-express:
    image: mongo-express
    ports:
      - '8081:8081'
    networks:
      - inner_net
    environment:
      ME_CONFIG_MONGODB_PORT: '27017'
      ME_CONFIG_MONGODB_SERVER: 'mongodb'
      ME_CONFIG_MONGODB_ENABLE_ADMIN: 'true'

  graylog:
    image: "graylog/graylog:5.2.6"
    depends_on:
      - opensearch
      - mongodb
    entrypoint: "/usr/bin/tini -- wait-for-it opensearch:9200 --  /docker-entrypoint.sh"
    environment:
      GRAYLOG_NODE_ID_FILE: "/usr/share/graylog/data/config/node-id"
      GRAYLOG_PASSWORD_SECRET: somepasswordpepper
      # to generate a password hash, type: echo -n admin | shasum -a 256
      GRAYLOG_ROOT_PASSWORD_SHA2: 8c6976e5b5410415bde908bd4dee15dfb167a9c873fc4bb8a81f6f2ab448a918
      GRAYLOG_HTTP_BIND_ADDRESS: "0.0.0.0:9001"
      GRAYLOG_HTTP_EXTERNAL_URI: "http://localhost:9001/"
      GRAYLOG_ELASTICSEARCH_HOSTS: "http://opensearch:9200"
      GRAYLOG_MONGODB_URI: "mongodb://mongodb:27017/graylog"
    ports:
      - "5044:5044/tcp"   # Beats
      - "5140:5140/udp"   # Syslog
      - "5140:5140/tcp"   # Syslog
      - "5555:5555/tcp"   # RAW TCP
      - "5555:5555/udp"   # RAW TCP
      - "9001:9001/tcp"   # Server API
      - "12201:12201/tcp" # GELF TCP
      - "12201:12201/udp" # GELF UDP
      - "13301:13301/tcp" # Forwarder data
      - "13302:13302/tcp" # Forwarder config
    networks:
      - inner_net

  opensearch:
    image: "opensearchproject/opensearch:2.4.0"
    environment:
      - "OPENSEARCH_JAVA_OPTS=-Xms1g -Xmx1g"
      - "bootstrap.memory_lock=true"
      - "discovery.type=single-node"
      - "action.auto_create_index=false"
      - "plugins.security.ssl.http.enabled=false"
      - "plugins.security.disabled=true"
    ulimits:
      memlock:
        hard: -1
        soft: -1
      nofile:
        soft: 65536
        hard: 65536
    volumes:
      - "os_data:/usr/share/opensearch/data"
    ports:
      - 9200:9200
    networks:
      - inner_net

  ftp-server:
    networks:
      - inner_net
    environment:
      - FTP_PASS=123
      - FTP_USER=user
    image: garethflowers/ftp-server
    ports:
      - '20-21:20-21/tcp'
      - '40000-40009:40000-40009/tcp'
    volumes:
      - '/data:/home/user'

  rabbitmq:
    container_name: "rabbitmq_server"
    image: rabbitmq:3-management-alpine
    environment:
      - RABBITMQ_DEFAULT_USER=guest
      - RABBITMQ_DEFAULT_PASS=guest
    ports:
      - 5672:5672 # port to use when writing
      - 15672:15672 #port to use for UI admin
    networks:
      - inner_net

  mailcatcher:
    networks:
      - inner_net
    image: yappabe/mailcatcher
    ports:
      - 1025:1025
      - 1080:1080

  minio:
    image: minio/minio
    networks:
      - inner_net
    environment:
      MINIO_ROOT_USER: access1234
      MINIO_ROOT_PASSWORD: secret1234
    volumes:
      - ./data/minio:/data
    command: server /data --console-address ":9001"
    ports:
      - 9000:9000
      - 9003:9001

  mercure:
    networks:
      - inner_net
    image: dunglas/mercure
    restart: unless-stopped
    environment:
      SERVER_NAME: ':80'
      MERCURE_PUBLISHER_JWT_KEY: '!ChangeThisMercureHubJWTSecretKey!'
      MERCURE_SUBSCRIBER_JWT_KEY: '!ChangeThisMercureHubJWTSecretKey!'
      MERCURE_EXTRA_DIRECTIVES: 'cors_origins http://localhost:8000'
    command: /usr/bin/caddy run --config /etc/caddy/Caddyfile.dev
    ports:
      - "9797:80"
    volumes:
      - caddy_data:/data
      - caddy_config:/config
      - ./docker/caddy/:/etc/caddy/

volumes:
  db_data:
  db_admin_data:
  caddy_data:
  caddy_config:
  dbdata6:
  esdata:
  mongodb_data:
  os_data:
  elasticsearch-data:
    driver: local
  kibana-data:
    driver: local

networks:
  inner_net:
