version: '3.7'

services:
  server:
    container_name: "server-container"
    build:
      context: .
      dockerfile: ./docker/franken_php/Dockerfile
    expose:
      - "9000"
      - "9003"
    ports:
      - "80:80"       # HTTP
      - "443:443"     # HTTPS
      - "443:443/udp" # HTTP/3
    working_dir: /app
    tty: true
    volumes:
      - ./source:/app
      - caddy_data:/data
      - caddy_config:/config
      - ./docker/server/php/php.ini:/usr/local/etc/php/conf.d/extra-php-config.ini
      - ./docker/xdebug/xdebug.ini:/usr/local/etc/php/conf.d/xdebug.ini
      - ./docker/franken_php/caddy/:/etc/caddy
    depends_on:
      - database
    networks:
      - inner_net
    environment:
      MERCURE_PUBLISHER_JWT_KEY: "!ChangeThisMercureHubJWTSecretKey!"
      MERCURE_SUBSCRIBER_JWT_KEY: "!ChangeThisMercureHubJWTSecretKey!"
      PUBLISHER_JWT_KEY: "!ChangeThisMercureHubJWTSecretKey!"
      SUBSCRIBER_JWT_KEY: "!ChangeThisMercureHubJWTSecretKey!"

  database:
    container_name: "database-server"
    healthcheck:
      test: mysqladmin ping -h 127.0.0.1 -u root --password=$$MYSQL_ROOT_PASSWORD
      interval: 5s
      retries: 5
    image: mysql
    volumes:
      - db_data:/var/lib/mysql
      - ./docker/db/mariadb/my.cnf:/etc/mysql/conf.d/my.cnf
    ports:
      - "3306:3306"
    environment:
      MYSQL_ROOT_PASSWORD: 'superSecr3t'
      MYSQL_USER: 'app_user'
      MYSQL_PASSWORD: 't3rceS'
      MYSQL_DATABASE: 'database'
    networks:
      - inner_net

  myadmin:
    container_name: "phpmyadmin-server"
    image: phpmyadmin/phpmyadmin:5
    environment:
      PMA_HOST: database
    ports:
      - "8080:80"
    depends_on:
      - database
    networks:
      - inner_net
    volumes:
      - db_admin_data:/var/www/html

#  mailcatcher:
#    container_name: "smtp-server"
#    networks:
#      - inner_net
#    image: yappabe/mailcatcher
#    ports:
#      - 1025:1025
#      - 1080:1080

#  ftp-server:
#    container_name: "ftp-server"
#    networks:
#      - inner_net
#    environment:
#      - FTP_PASS=123
#      - FTP_USER=user
#    image: garethflowers/ftp-server
#    ports:
#      - '20-21:20-21/tcp'
#      - '40000-40009:40000-40009/tcp'
#    volumes:
#      - '/data:/home/user'

#  caddy:
#    container_name: "mercure-server"
#    networks:
#      - inner_net
#    image: dunglas/mercure
#    restart: unless-stopped
#    environment:
#      SERVER_NAME: ':80'
#      MERCURE_PUBLISHER_JWT_KEY: '!ChangeThisMercureHubJWTSecretKey!'
#      MERCURE_SUBSCRIBER_JWT_KEY: '!ChangeThisMercureHubJWTSecretKey!'
#    command: /usr/bin/caddy run --config /etc/caddy/Caddyfile.dev
#    ports:
#      - "9797:80"
#    volumes:
#      - caddy_data:/data
#      - caddy_config:/config

#  mongodb:
#    container_name: "mongodb-server"
#    image: mongo:6-jammy
#    ports:
#      - '27017:27017'
#    volumes:
#      - dbdata6:/data/db
#    networks:
#      - inner_net

#  mongo-express:
#    container_name: "mongo-express"
#    image: mongo-express
#    ports:
#      - '8081:8081'
#    networks:
#      - inner_net
#    environment:
#      ME_CONFIG_MONGODB_PORT: '27017'
#      ME_CONFIG_MONGODB_SERVER: 'mongodb'
#      ME_CONFIG_MONGODB_ENABLE_ADMIN: 'true'

#  rabbitmq:
#    container_name: "rabbitmq-broker-server"
#    image: rabbitmq:3-management-alpine
#    environment:
#      - RABBITMQ_DEFAULT_USER=guest
#      - RABBITMQ_DEFAULT_PASS=guest
#    ports:
#      - 5672:5672
#      - 15672:15672
#    networks:
#      - inner_net

volumes:
  db_data:
  db_admin_data:
  caddy_data:
  caddy_config:
  dbdata6:

networks:
  inner_net:
